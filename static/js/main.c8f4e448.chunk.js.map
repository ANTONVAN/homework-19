{"version":3,"sources":["components/SearchForm.js","components/EmployeeList.js","utils/API.js","components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","props","className","onChange","handleInputChange","value","search","name","type","placeholder","id","EmployeeList","items","config","React","useState","sortConfig","setSortConfig","useMemo","sortableItems","sort","a","b","console","log","key","direction","requestSort","useSortableData","results","scope","onClick","map","result","src","picture","thumbnail","first","cell","email","dob","date","axios","get","SearchEmployeeContainer","state","employees","searchUsers","query","API","then","res","setState","data","catch","err","event","target","filter","obj","constructor","includes","toLowerCase","this","Component","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8f4e448.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.search}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search for a user\"\r\n          id=\"search\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\n\r\n\tconst useSortableData = (items, config = null) => {\r\n\t  const [sortConfig, setSortConfig] = React.useState(config);\r\n\r\n\t  const sortedItems = React.useMemo(() => {\r\n\t    let sortableItems = [...items];\r\n\t    if (sortConfig !== null) {\r\n\t      sortableItems.sort((a, b) => {\r\n\t  \t\t\tconsole.log(b);\r\n\t        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n\t          return sortConfig.direction === 'ascending' ? -1 : 1;\r\n\t        }else if (a[sortConfig.key] > b[sortConfig.key]) {\r\n\t          return sortConfig.direction === 'ascending' ? 1 : -1;\r\n\t        }\r\n\t        return 0;\r\n\t      });\r\n\t    }\r\n\t    return sortableItems;\r\n\t  }, [items, sortConfig]);\r\n\r\n\t  const requestSort = (key) => {\r\n\t    let direction = 'ascending';\r\n\t    if (\r\n\t      sortConfig &&\r\n\t      sortConfig.key === key &&\r\n\t      sortConfig.direction === 'ascending'\r\n\t    ) {\r\n\t      direction = 'descending';\r\n\t    }\r\n\t    setSortConfig({ key, direction });\r\n\t  };\r\n\r\n\t  return { items: sortedItems, requestSort, sortConfig };\r\n\t};\r\n\r\n\r\nfunction EmployeeList(props) {\r\n\r\n\t  const { items, requestSort, sortConfig } = useSortableData(props.results);\r\n\t  \r\n\t  const getClassNamesFor = (name) => {\r\n\t    if (!sortConfig) {\r\n\t      return;\r\n\t    }\r\n\t    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n\t  };\r\n\r\n\r\n  return (\r\n  \t<div>\r\n\t\r\n\t<table className=\"table table-dark\">\r\n\t  <thead>\r\n\t    <tr>\r\n\r\n\t      <th scope=\"col\">\r\n\t      Image\r\n\t      </th>\r\n\t      <th scope=\"col\">\r\n\t          <button\r\n\t              type=\"button\"\r\n\t              \tonClick={() => requestSort('name')}\r\n\t              className=\"{getClassNamesFor('name')} btn btn-primary\"\r\n\t            >\r\n\t              Name\r\n\t            </button>\r\n\t      </th>\r\n\t      <th scope=\"col\">\r\n\t      <button\r\n\t              type=\"button\"\r\n\t                onClick={() => requestSort('phone')}\r\n\t              className=\"{getClassNamesFor('phone')} btn btn-primary\"\r\n\t            >\r\n\t              Phone\r\n\t            </button>\r\n\t      </th>\r\n\t      <th scope=\"col\">\r\n\t      <button\r\n\t              type=\"button\"\r\n\t              \tonClick={() => requestSort('email')}\r\n\t              className=\"{getClassNamesFor('email')} btn btn-primary\"\r\n\t            >\r\n\t              Email\r\n\t            </button>\r\n\t      </th>\r\n\t      <th scope=\"col\">\r\n\t      <button\r\n\t              type=\"button\"\r\n\t                onClick={() => requestSort('dob')}\r\n\t              className=\"{getClassNamesFor('dob')} btn btn-primary\"\r\n\t            >\r\n\t      \t\t\tDOB\r\n\t            </button>\r\n\t      \r\n\t      </th>\r\n\t    </tr>\r\n\t  </thead>\r\n\t  <tbody>\r\n      \t     \r\n\t\t\t{\r\n\t\t\t\t  items.map(result => (\r\n\t\t\t\t\t    \t<tr key={result.name.first}>\r\n\t\t\t\t\t\t      <td><img src={result.picture.thumbnail}/></td>\r\n\t\t\t\t\t\t      <td>{result.name.first}</td>\r\n\t\t\t\t\t\t      <td>{result.cell}</td>\r\n\t\t\t\t\t\t      <td>{result.email}</td>\r\n\t\t\t\t\t\t      <td>{result.dob.date}</td>\r\n\t\t\t\t\t    \t</tr>\r\n\t\t\t\t\t\t\t      )\r\n\t\t\t\t\t\t\t     )\r\n\t\t\t}\r\n\r\n\t  </tbody>\r\n\t</table>\r\n\t</div>\r\n\r\n  );\r\n}\r\n\r\nexport default EmployeeList;\r\n","import axios from \"axios\";\r\nconst BASEURL = \"https://randomuser.me/api/?results=10\";\r\n\r\n\r\nexport default {\r\n  search: function() {\r\n    return axios.get(BASEURL);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport EmployeeList from \"./EmployeeList\";\r\nimport API from \"../utils/API\";\r\n\r\n\r\n\r\n\r\nclass SearchEmployeeContainer extends Component {\r\n  state = {\r\n    search: \"\",\r\n    employees: [],\r\n    results: []\r\n  };\r\n\r\n    // When this component mounts, search for users\"\r\n  componentDidMount() {\r\n    this.searchUsers();\r\n  }\r\n\r\n  searchUsers = query => {\r\n    API.search()\r\n      .then(res => this.setState({ employees: res.data.results, results: res.data.results }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n\r\n\r\n\r\n  handleInputChange = event => {\r\n    \r\n    var isAnObject =  function isObject(obj)\r\n          {\r\n              return obj != null && obj.constructor.name === \"Object\"\r\n          }\r\n\r\n\r\n          \r\n\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n  \r\n\r\n      const results = this.state.employees.filter(result => {\r\n\r\n      for (var key in result) {\r\n        \r\n\r\n        if(isAnObject(result[key])) {\r\n        \r\n        }else{\r\n          if(result[key].includes(value.toLowerCase())){\r\n\r\n            return result;\r\n\r\n          } \r\n        }\r\n      }\r\n    });\r\n\r\n    \r\n    this.setState({\r\n      [name]: value,\r\n      results: results\r\n    });\r\n  \r\n      \r\n  };\r\n\r\n\r\n  /*handleTableSort = event => {\r\n    const column = event.target;\r\n  }*/\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1> User List Search</h1>\r\n        <SearchForm\r\n          search={this.state.search}\r\n          handleInputChange={this.handleInputChange}\r\n        />\r\n        <EmployeeList results={this.state.results}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchEmployeeContainer;\r\n","import React from \"react\";\nimport Container from \"./components/Container\";\n\nfunction App() {\n  return <Container />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}